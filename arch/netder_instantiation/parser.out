Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> formula
Rule 1     formula -> atomicFormula
Rule 2     formula -> LBRACKET formula RBRACKET
Rule 3     formula -> formula IFF formula
Rule 4     formula -> formula IMPLIES formula
Rule 5     formula -> formula OR formula
Rule 6     formula -> formula AND formula
Rule 7     formula -> NOT formula
Rule 8     quantifierList -> quantifierList COMMA IDENTIFIER
Rule 9     quantifierList -> IDENTIFIER
Rule 10    formula -> FORALL quantifierList LBRACKET formula RBRACKET
Rule 11    formula -> THEREEXISTS quantifierList LBRACKET formula RBRACKET
Rule 12    atomicFormula -> IDENTIFIER LBRACKET termList RBRACKET
Rule 13    atomicFormula -> expression EQ expression
Rule 14    atomicFormula -> expression EQ term
Rule 15    atomicFormula -> term EQ expression
Rule 16    atomicFormula -> term EQ term
Rule 17    expression -> expression PLUS term
Rule 18    expression -> term PLUS term
Rule 19    atomicFormula -> expression LT expression
Rule 20    atomicFormula -> expression LT term
Rule 21    atomicFormula -> term LT expression
Rule 22    atomicFormula -> term LT term
Rule 23    atomicFormula -> expression LTE expression
Rule 24    atomicFormula -> expression LTE term
Rule 25    atomicFormula -> term LTE expression
Rule 26    atomicFormula -> term LTE term
Rule 27    atomicFormula -> expression GT expression
Rule 28    atomicFormula -> expression GT term
Rule 29    atomicFormula -> term GT expression
Rule 30    atomicFormula -> term GT term
Rule 31    atomicFormula -> expression GTE expression
Rule 32    atomicFormula -> expression GTE term
Rule 33    atomicFormula -> term GTE expression
Rule 34    atomicFormula -> term GTE term
Rule 35    atomicFormula -> expression NEQ expression
Rule 36    atomicFormula -> expression NEQ term
Rule 37    atomicFormula -> term NEQ expression
Rule 38    atomicFormula -> term NEQ term
Rule 39    termList -> termList COMMA term
Rule 40    termList -> term
Rule 41    term -> CONSTANT
Rule 42    term -> IDENTIFIER
Rule 43    term -> STRINGLIT
Rule 44    term -> TRUE
Rule 45    term -> FALSE

Terminals, with rules where they appear

AND                  : 6
COMMA                : 8 39
CONSTANT             : 41
EQ                   : 13 14 15 16
FALSE                : 45
FORALL               : 10
GT                   : 27 28 29 30
GTE                  : 31 32 33 34
IDENTIFIER           : 8 9 12 42
IFF                  : 3
IMPLIES              : 4
LBRACKET             : 2 10 11 12
LT                   : 19 20 21 22
LTE                  : 23 24 25 26
NEQ                  : 35 36 37 38
NOT                  : 7
OR                   : 5
PLUS                 : 17 18
RBRACKET             : 2 10 11 12
STRINGLIT            : 43
THEREEXISTS          : 11
TRUE                 : 44
error                : 

Nonterminals, with rules where they appear

atomicFormula        : 1
expression           : 13 13 14 15 17 19 19 20 21 23 23 24 25 27 27 28 29 31 31 32 33 35 35 36 37
formula              : 2 3 3 4 4 5 5 6 6 7 10 11 0
quantifierList       : 8 10 11
term                 : 14 15 16 16 17 18 18 20 21 22 22 24 25 26 26 28 29 30 30 32 33 34 34 36 37 38 38 39 40
termList             : 12 39

Parsing method: LALR

state 0

    (0) S' -> . formula
    (1) formula -> . atomicFormula
    (2) formula -> . LBRACKET formula RBRACKET
    (3) formula -> . formula IFF formula
    (4) formula -> . formula IMPLIES formula
    (5) formula -> . formula OR formula
    (6) formula -> . formula AND formula
    (7) formula -> . NOT formula
    (10) formula -> . FORALL quantifierList LBRACKET formula RBRACKET
    (11) formula -> . THEREEXISTS quantifierList LBRACKET formula RBRACKET
    (12) atomicFormula -> . IDENTIFIER LBRACKET termList RBRACKET
    (13) atomicFormula -> . expression EQ expression
    (14) atomicFormula -> . expression EQ term
    (15) atomicFormula -> . term EQ expression
    (16) atomicFormula -> . term EQ term
    (19) atomicFormula -> . expression LT expression
    (20) atomicFormula -> . expression LT term
    (21) atomicFormula -> . term LT expression
    (22) atomicFormula -> . term LT term
    (23) atomicFormula -> . expression LTE expression
    (24) atomicFormula -> . expression LTE term
    (25) atomicFormula -> . term LTE expression
    (26) atomicFormula -> . term LTE term
    (27) atomicFormula -> . expression GT expression
    (28) atomicFormula -> . expression GT term
    (29) atomicFormula -> . term GT expression
    (30) atomicFormula -> . term GT term
    (31) atomicFormula -> . expression GTE expression
    (32) atomicFormula -> . expression GTE term
    (33) atomicFormula -> . term GTE expression
    (34) atomicFormula -> . term GTE term
    (35) atomicFormula -> . expression NEQ expression
    (36) atomicFormula -> . expression NEQ term
    (37) atomicFormula -> . term NEQ expression
    (38) atomicFormula -> . term NEQ term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    LBRACKET        shift and go to state 3
    NOT             shift and go to state 4
    FORALL          shift and go to state 5
    THEREEXISTS     shift and go to state 6
    IDENTIFIER      shift and go to state 7
    CONSTANT        shift and go to state 10
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    formula                        shift and go to state 1
    atomicFormula                  shift and go to state 2
    expression                     shift and go to state 8
    term                           shift and go to state 9

state 1

    (0) S' -> formula .
    (3) formula -> formula . IFF formula
    (4) formula -> formula . IMPLIES formula
    (5) formula -> formula . OR formula
    (6) formula -> formula . AND formula

    IFF             shift and go to state 14
    IMPLIES         shift and go to state 15
    OR              shift and go to state 16
    AND             shift and go to state 17


state 2

    (1) formula -> atomicFormula .

    IFF             reduce using rule 1 (formula -> atomicFormula .)
    IMPLIES         reduce using rule 1 (formula -> atomicFormula .)
    OR              reduce using rule 1 (formula -> atomicFormula .)
    AND             reduce using rule 1 (formula -> atomicFormula .)
    $end            reduce using rule 1 (formula -> atomicFormula .)
    RBRACKET        reduce using rule 1 (formula -> atomicFormula .)


state 3

    (2) formula -> LBRACKET . formula RBRACKET
    (1) formula -> . atomicFormula
    (2) formula -> . LBRACKET formula RBRACKET
    (3) formula -> . formula IFF formula
    (4) formula -> . formula IMPLIES formula
    (5) formula -> . formula OR formula
    (6) formula -> . formula AND formula
    (7) formula -> . NOT formula
    (10) formula -> . FORALL quantifierList LBRACKET formula RBRACKET
    (11) formula -> . THEREEXISTS quantifierList LBRACKET formula RBRACKET
    (12) atomicFormula -> . IDENTIFIER LBRACKET termList RBRACKET
    (13) atomicFormula -> . expression EQ expression
    (14) atomicFormula -> . expression EQ term
    (15) atomicFormula -> . term EQ expression
    (16) atomicFormula -> . term EQ term
    (19) atomicFormula -> . expression LT expression
    (20) atomicFormula -> . expression LT term
    (21) atomicFormula -> . term LT expression
    (22) atomicFormula -> . term LT term
    (23) atomicFormula -> . expression LTE expression
    (24) atomicFormula -> . expression LTE term
    (25) atomicFormula -> . term LTE expression
    (26) atomicFormula -> . term LTE term
    (27) atomicFormula -> . expression GT expression
    (28) atomicFormula -> . expression GT term
    (29) atomicFormula -> . term GT expression
    (30) atomicFormula -> . term GT term
    (31) atomicFormula -> . expression GTE expression
    (32) atomicFormula -> . expression GTE term
    (33) atomicFormula -> . term GTE expression
    (34) atomicFormula -> . term GTE term
    (35) atomicFormula -> . expression NEQ expression
    (36) atomicFormula -> . expression NEQ term
    (37) atomicFormula -> . term NEQ expression
    (38) atomicFormula -> . term NEQ term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    LBRACKET        shift and go to state 3
    NOT             shift and go to state 4
    FORALL          shift and go to state 5
    THEREEXISTS     shift and go to state 6
    IDENTIFIER      shift and go to state 7
    CONSTANT        shift and go to state 10
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    formula                        shift and go to state 18
    atomicFormula                  shift and go to state 2
    expression                     shift and go to state 8
    term                           shift and go to state 9

state 4

    (7) formula -> NOT . formula
    (1) formula -> . atomicFormula
    (2) formula -> . LBRACKET formula RBRACKET
    (3) formula -> . formula IFF formula
    (4) formula -> . formula IMPLIES formula
    (5) formula -> . formula OR formula
    (6) formula -> . formula AND formula
    (7) formula -> . NOT formula
    (10) formula -> . FORALL quantifierList LBRACKET formula RBRACKET
    (11) formula -> . THEREEXISTS quantifierList LBRACKET formula RBRACKET
    (12) atomicFormula -> . IDENTIFIER LBRACKET termList RBRACKET
    (13) atomicFormula -> . expression EQ expression
    (14) atomicFormula -> . expression EQ term
    (15) atomicFormula -> . term EQ expression
    (16) atomicFormula -> . term EQ term
    (19) atomicFormula -> . expression LT expression
    (20) atomicFormula -> . expression LT term
    (21) atomicFormula -> . term LT expression
    (22) atomicFormula -> . term LT term
    (23) atomicFormula -> . expression LTE expression
    (24) atomicFormula -> . expression LTE term
    (25) atomicFormula -> . term LTE expression
    (26) atomicFormula -> . term LTE term
    (27) atomicFormula -> . expression GT expression
    (28) atomicFormula -> . expression GT term
    (29) atomicFormula -> . term GT expression
    (30) atomicFormula -> . term GT term
    (31) atomicFormula -> . expression GTE expression
    (32) atomicFormula -> . expression GTE term
    (33) atomicFormula -> . term GTE expression
    (34) atomicFormula -> . term GTE term
    (35) atomicFormula -> . expression NEQ expression
    (36) atomicFormula -> . expression NEQ term
    (37) atomicFormula -> . term NEQ expression
    (38) atomicFormula -> . term NEQ term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    LBRACKET        shift and go to state 3
    NOT             shift and go to state 4
    FORALL          shift and go to state 5
    THEREEXISTS     shift and go to state 6
    IDENTIFIER      shift and go to state 7
    CONSTANT        shift and go to state 10
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    formula                        shift and go to state 19
    atomicFormula                  shift and go to state 2
    expression                     shift and go to state 8
    term                           shift and go to state 9

state 5

    (10) formula -> FORALL . quantifierList LBRACKET formula RBRACKET
    (8) quantifierList -> . quantifierList COMMA IDENTIFIER
    (9) quantifierList -> . IDENTIFIER

    IDENTIFIER      shift and go to state 21

    quantifierList                 shift and go to state 20

state 6

    (11) formula -> THEREEXISTS . quantifierList LBRACKET formula RBRACKET
    (8) quantifierList -> . quantifierList COMMA IDENTIFIER
    (9) quantifierList -> . IDENTIFIER

    IDENTIFIER      shift and go to state 21

    quantifierList                 shift and go to state 22

state 7

    (12) atomicFormula -> IDENTIFIER . LBRACKET termList RBRACKET
    (42) term -> IDENTIFIER .

    LBRACKET        shift and go to state 23
    EQ              reduce using rule 42 (term -> IDENTIFIER .)
    LT              reduce using rule 42 (term -> IDENTIFIER .)
    LTE             reduce using rule 42 (term -> IDENTIFIER .)
    GT              reduce using rule 42 (term -> IDENTIFIER .)
    GTE             reduce using rule 42 (term -> IDENTIFIER .)
    NEQ             reduce using rule 42 (term -> IDENTIFIER .)
    PLUS            reduce using rule 42 (term -> IDENTIFIER .)


state 8

    (13) atomicFormula -> expression . EQ expression
    (14) atomicFormula -> expression . EQ term
    (19) atomicFormula -> expression . LT expression
    (20) atomicFormula -> expression . LT term
    (23) atomicFormula -> expression . LTE expression
    (24) atomicFormula -> expression . LTE term
    (27) atomicFormula -> expression . GT expression
    (28) atomicFormula -> expression . GT term
    (31) atomicFormula -> expression . GTE expression
    (32) atomicFormula -> expression . GTE term
    (35) atomicFormula -> expression . NEQ expression
    (36) atomicFormula -> expression . NEQ term
    (17) expression -> expression . PLUS term

    EQ              shift and go to state 24
    LT              shift and go to state 25
    LTE             shift and go to state 26
    GT              shift and go to state 27
    GTE             shift and go to state 28
    NEQ             shift and go to state 29
    PLUS            shift and go to state 30


state 9

    (15) atomicFormula -> term . EQ expression
    (16) atomicFormula -> term . EQ term
    (21) atomicFormula -> term . LT expression
    (22) atomicFormula -> term . LT term
    (25) atomicFormula -> term . LTE expression
    (26) atomicFormula -> term . LTE term
    (29) atomicFormula -> term . GT expression
    (30) atomicFormula -> term . GT term
    (33) atomicFormula -> term . GTE expression
    (34) atomicFormula -> term . GTE term
    (37) atomicFormula -> term . NEQ expression
    (38) atomicFormula -> term . NEQ term
    (18) expression -> term . PLUS term

    EQ              shift and go to state 31
    LT              shift and go to state 32
    LTE             shift and go to state 33
    GT              shift and go to state 34
    GTE             shift and go to state 35
    NEQ             shift and go to state 36
    PLUS            shift and go to state 37


state 10

    (41) term -> CONSTANT .

    EQ              reduce using rule 41 (term -> CONSTANT .)
    LT              reduce using rule 41 (term -> CONSTANT .)
    LTE             reduce using rule 41 (term -> CONSTANT .)
    GT              reduce using rule 41 (term -> CONSTANT .)
    GTE             reduce using rule 41 (term -> CONSTANT .)
    NEQ             reduce using rule 41 (term -> CONSTANT .)
    PLUS            reduce using rule 41 (term -> CONSTANT .)
    RBRACKET        reduce using rule 41 (term -> CONSTANT .)
    COMMA           reduce using rule 41 (term -> CONSTANT .)
    IFF             reduce using rule 41 (term -> CONSTANT .)
    IMPLIES         reduce using rule 41 (term -> CONSTANT .)
    OR              reduce using rule 41 (term -> CONSTANT .)
    AND             reduce using rule 41 (term -> CONSTANT .)
    $end            reduce using rule 41 (term -> CONSTANT .)


state 11

    (43) term -> STRINGLIT .

    EQ              reduce using rule 43 (term -> STRINGLIT .)
    LT              reduce using rule 43 (term -> STRINGLIT .)
    LTE             reduce using rule 43 (term -> STRINGLIT .)
    GT              reduce using rule 43 (term -> STRINGLIT .)
    GTE             reduce using rule 43 (term -> STRINGLIT .)
    NEQ             reduce using rule 43 (term -> STRINGLIT .)
    PLUS            reduce using rule 43 (term -> STRINGLIT .)
    RBRACKET        reduce using rule 43 (term -> STRINGLIT .)
    COMMA           reduce using rule 43 (term -> STRINGLIT .)
    IFF             reduce using rule 43 (term -> STRINGLIT .)
    IMPLIES         reduce using rule 43 (term -> STRINGLIT .)
    OR              reduce using rule 43 (term -> STRINGLIT .)
    AND             reduce using rule 43 (term -> STRINGLIT .)
    $end            reduce using rule 43 (term -> STRINGLIT .)


state 12

    (44) term -> TRUE .

    EQ              reduce using rule 44 (term -> TRUE .)
    LT              reduce using rule 44 (term -> TRUE .)
    LTE             reduce using rule 44 (term -> TRUE .)
    GT              reduce using rule 44 (term -> TRUE .)
    GTE             reduce using rule 44 (term -> TRUE .)
    NEQ             reduce using rule 44 (term -> TRUE .)
    PLUS            reduce using rule 44 (term -> TRUE .)
    RBRACKET        reduce using rule 44 (term -> TRUE .)
    COMMA           reduce using rule 44 (term -> TRUE .)
    IFF             reduce using rule 44 (term -> TRUE .)
    IMPLIES         reduce using rule 44 (term -> TRUE .)
    OR              reduce using rule 44 (term -> TRUE .)
    AND             reduce using rule 44 (term -> TRUE .)
    $end            reduce using rule 44 (term -> TRUE .)


state 13

    (45) term -> FALSE .

    EQ              reduce using rule 45 (term -> FALSE .)
    LT              reduce using rule 45 (term -> FALSE .)
    LTE             reduce using rule 45 (term -> FALSE .)
    GT              reduce using rule 45 (term -> FALSE .)
    GTE             reduce using rule 45 (term -> FALSE .)
    NEQ             reduce using rule 45 (term -> FALSE .)
    PLUS            reduce using rule 45 (term -> FALSE .)
    RBRACKET        reduce using rule 45 (term -> FALSE .)
    COMMA           reduce using rule 45 (term -> FALSE .)
    IFF             reduce using rule 45 (term -> FALSE .)
    IMPLIES         reduce using rule 45 (term -> FALSE .)
    OR              reduce using rule 45 (term -> FALSE .)
    AND             reduce using rule 45 (term -> FALSE .)
    $end            reduce using rule 45 (term -> FALSE .)


state 14

    (3) formula -> formula IFF . formula
    (1) formula -> . atomicFormula
    (2) formula -> . LBRACKET formula RBRACKET
    (3) formula -> . formula IFF formula
    (4) formula -> . formula IMPLIES formula
    (5) formula -> . formula OR formula
    (6) formula -> . formula AND formula
    (7) formula -> . NOT formula
    (10) formula -> . FORALL quantifierList LBRACKET formula RBRACKET
    (11) formula -> . THEREEXISTS quantifierList LBRACKET formula RBRACKET
    (12) atomicFormula -> . IDENTIFIER LBRACKET termList RBRACKET
    (13) atomicFormula -> . expression EQ expression
    (14) atomicFormula -> . expression EQ term
    (15) atomicFormula -> . term EQ expression
    (16) atomicFormula -> . term EQ term
    (19) atomicFormula -> . expression LT expression
    (20) atomicFormula -> . expression LT term
    (21) atomicFormula -> . term LT expression
    (22) atomicFormula -> . term LT term
    (23) atomicFormula -> . expression LTE expression
    (24) atomicFormula -> . expression LTE term
    (25) atomicFormula -> . term LTE expression
    (26) atomicFormula -> . term LTE term
    (27) atomicFormula -> . expression GT expression
    (28) atomicFormula -> . expression GT term
    (29) atomicFormula -> . term GT expression
    (30) atomicFormula -> . term GT term
    (31) atomicFormula -> . expression GTE expression
    (32) atomicFormula -> . expression GTE term
    (33) atomicFormula -> . term GTE expression
    (34) atomicFormula -> . term GTE term
    (35) atomicFormula -> . expression NEQ expression
    (36) atomicFormula -> . expression NEQ term
    (37) atomicFormula -> . term NEQ expression
    (38) atomicFormula -> . term NEQ term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    LBRACKET        shift and go to state 3
    NOT             shift and go to state 4
    FORALL          shift and go to state 5
    THEREEXISTS     shift and go to state 6
    IDENTIFIER      shift and go to state 7
    CONSTANT        shift and go to state 10
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    formula                        shift and go to state 38
    atomicFormula                  shift and go to state 2
    expression                     shift and go to state 8
    term                           shift and go to state 9

state 15

    (4) formula -> formula IMPLIES . formula
    (1) formula -> . atomicFormula
    (2) formula -> . LBRACKET formula RBRACKET
    (3) formula -> . formula IFF formula
    (4) formula -> . formula IMPLIES formula
    (5) formula -> . formula OR formula
    (6) formula -> . formula AND formula
    (7) formula -> . NOT formula
    (10) formula -> . FORALL quantifierList LBRACKET formula RBRACKET
    (11) formula -> . THEREEXISTS quantifierList LBRACKET formula RBRACKET
    (12) atomicFormula -> . IDENTIFIER LBRACKET termList RBRACKET
    (13) atomicFormula -> . expression EQ expression
    (14) atomicFormula -> . expression EQ term
    (15) atomicFormula -> . term EQ expression
    (16) atomicFormula -> . term EQ term
    (19) atomicFormula -> . expression LT expression
    (20) atomicFormula -> . expression LT term
    (21) atomicFormula -> . term LT expression
    (22) atomicFormula -> . term LT term
    (23) atomicFormula -> . expression LTE expression
    (24) atomicFormula -> . expression LTE term
    (25) atomicFormula -> . term LTE expression
    (26) atomicFormula -> . term LTE term
    (27) atomicFormula -> . expression GT expression
    (28) atomicFormula -> . expression GT term
    (29) atomicFormula -> . term GT expression
    (30) atomicFormula -> . term GT term
    (31) atomicFormula -> . expression GTE expression
    (32) atomicFormula -> . expression GTE term
    (33) atomicFormula -> . term GTE expression
    (34) atomicFormula -> . term GTE term
    (35) atomicFormula -> . expression NEQ expression
    (36) atomicFormula -> . expression NEQ term
    (37) atomicFormula -> . term NEQ expression
    (38) atomicFormula -> . term NEQ term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    LBRACKET        shift and go to state 3
    NOT             shift and go to state 4
    FORALL          shift and go to state 5
    THEREEXISTS     shift and go to state 6
    IDENTIFIER      shift and go to state 7
    CONSTANT        shift and go to state 10
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    formula                        shift and go to state 39
    atomicFormula                  shift and go to state 2
    expression                     shift and go to state 8
    term                           shift and go to state 9

state 16

    (5) formula -> formula OR . formula
    (1) formula -> . atomicFormula
    (2) formula -> . LBRACKET formula RBRACKET
    (3) formula -> . formula IFF formula
    (4) formula -> . formula IMPLIES formula
    (5) formula -> . formula OR formula
    (6) formula -> . formula AND formula
    (7) formula -> . NOT formula
    (10) formula -> . FORALL quantifierList LBRACKET formula RBRACKET
    (11) formula -> . THEREEXISTS quantifierList LBRACKET formula RBRACKET
    (12) atomicFormula -> . IDENTIFIER LBRACKET termList RBRACKET
    (13) atomicFormula -> . expression EQ expression
    (14) atomicFormula -> . expression EQ term
    (15) atomicFormula -> . term EQ expression
    (16) atomicFormula -> . term EQ term
    (19) atomicFormula -> . expression LT expression
    (20) atomicFormula -> . expression LT term
    (21) atomicFormula -> . term LT expression
    (22) atomicFormula -> . term LT term
    (23) atomicFormula -> . expression LTE expression
    (24) atomicFormula -> . expression LTE term
    (25) atomicFormula -> . term LTE expression
    (26) atomicFormula -> . term LTE term
    (27) atomicFormula -> . expression GT expression
    (28) atomicFormula -> . expression GT term
    (29) atomicFormula -> . term GT expression
    (30) atomicFormula -> . term GT term
    (31) atomicFormula -> . expression GTE expression
    (32) atomicFormula -> . expression GTE term
    (33) atomicFormula -> . term GTE expression
    (34) atomicFormula -> . term GTE term
    (35) atomicFormula -> . expression NEQ expression
    (36) atomicFormula -> . expression NEQ term
    (37) atomicFormula -> . term NEQ expression
    (38) atomicFormula -> . term NEQ term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    LBRACKET        shift and go to state 3
    NOT             shift and go to state 4
    FORALL          shift and go to state 5
    THEREEXISTS     shift and go to state 6
    IDENTIFIER      shift and go to state 7
    CONSTANT        shift and go to state 10
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    formula                        shift and go to state 40
    atomicFormula                  shift and go to state 2
    expression                     shift and go to state 8
    term                           shift and go to state 9

state 17

    (6) formula -> formula AND . formula
    (1) formula -> . atomicFormula
    (2) formula -> . LBRACKET formula RBRACKET
    (3) formula -> . formula IFF formula
    (4) formula -> . formula IMPLIES formula
    (5) formula -> . formula OR formula
    (6) formula -> . formula AND formula
    (7) formula -> . NOT formula
    (10) formula -> . FORALL quantifierList LBRACKET formula RBRACKET
    (11) formula -> . THEREEXISTS quantifierList LBRACKET formula RBRACKET
    (12) atomicFormula -> . IDENTIFIER LBRACKET termList RBRACKET
    (13) atomicFormula -> . expression EQ expression
    (14) atomicFormula -> . expression EQ term
    (15) atomicFormula -> . term EQ expression
    (16) atomicFormula -> . term EQ term
    (19) atomicFormula -> . expression LT expression
    (20) atomicFormula -> . expression LT term
    (21) atomicFormula -> . term LT expression
    (22) atomicFormula -> . term LT term
    (23) atomicFormula -> . expression LTE expression
    (24) atomicFormula -> . expression LTE term
    (25) atomicFormula -> . term LTE expression
    (26) atomicFormula -> . term LTE term
    (27) atomicFormula -> . expression GT expression
    (28) atomicFormula -> . expression GT term
    (29) atomicFormula -> . term GT expression
    (30) atomicFormula -> . term GT term
    (31) atomicFormula -> . expression GTE expression
    (32) atomicFormula -> . expression GTE term
    (33) atomicFormula -> . term GTE expression
    (34) atomicFormula -> . term GTE term
    (35) atomicFormula -> . expression NEQ expression
    (36) atomicFormula -> . expression NEQ term
    (37) atomicFormula -> . term NEQ expression
    (38) atomicFormula -> . term NEQ term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    LBRACKET        shift and go to state 3
    NOT             shift and go to state 4
    FORALL          shift and go to state 5
    THEREEXISTS     shift and go to state 6
    IDENTIFIER      shift and go to state 7
    CONSTANT        shift and go to state 10
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    formula                        shift and go to state 41
    atomicFormula                  shift and go to state 2
    expression                     shift and go to state 8
    term                           shift and go to state 9

state 18

    (2) formula -> LBRACKET formula . RBRACKET
    (3) formula -> formula . IFF formula
    (4) formula -> formula . IMPLIES formula
    (5) formula -> formula . OR formula
    (6) formula -> formula . AND formula

    RBRACKET        shift and go to state 42
    IFF             shift and go to state 14
    IMPLIES         shift and go to state 15
    OR              shift and go to state 16
    AND             shift and go to state 17


state 19

    (7) formula -> NOT formula .
    (3) formula -> formula . IFF formula
    (4) formula -> formula . IMPLIES formula
    (5) formula -> formula . OR formula
    (6) formula -> formula . AND formula

    IFF             reduce using rule 7 (formula -> NOT formula .)
    IMPLIES         reduce using rule 7 (formula -> NOT formula .)
    OR              reduce using rule 7 (formula -> NOT formula .)
    AND             reduce using rule 7 (formula -> NOT formula .)
    $end            reduce using rule 7 (formula -> NOT formula .)
    RBRACKET        reduce using rule 7 (formula -> NOT formula .)

  ! IFF             [ shift and go to state 14 ]
  ! IMPLIES         [ shift and go to state 15 ]
  ! OR              [ shift and go to state 16 ]
  ! AND             [ shift and go to state 17 ]


state 20

    (10) formula -> FORALL quantifierList . LBRACKET formula RBRACKET
    (8) quantifierList -> quantifierList . COMMA IDENTIFIER

    LBRACKET        shift and go to state 43
    COMMA           shift and go to state 44


state 21

    (9) quantifierList -> IDENTIFIER .

    LBRACKET        reduce using rule 9 (quantifierList -> IDENTIFIER .)
    COMMA           reduce using rule 9 (quantifierList -> IDENTIFIER .)


state 22

    (11) formula -> THEREEXISTS quantifierList . LBRACKET formula RBRACKET
    (8) quantifierList -> quantifierList . COMMA IDENTIFIER

    LBRACKET        shift and go to state 45
    COMMA           shift and go to state 44


state 23

    (12) atomicFormula -> IDENTIFIER LBRACKET . termList RBRACKET
    (39) termList -> . termList COMMA term
    (40) termList -> . term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    CONSTANT        shift and go to state 10
    IDENTIFIER      shift and go to state 46
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    termList                       shift and go to state 47
    term                           shift and go to state 48

state 24

    (13) atomicFormula -> expression EQ . expression
    (14) atomicFormula -> expression EQ . term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    CONSTANT        shift and go to state 10
    IDENTIFIER      shift and go to state 46
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    expression                     shift and go to state 49
    term                           shift and go to state 50

state 25

    (19) atomicFormula -> expression LT . expression
    (20) atomicFormula -> expression LT . term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    CONSTANT        shift and go to state 10
    IDENTIFIER      shift and go to state 46
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    expression                     shift and go to state 51
    term                           shift and go to state 52

state 26

    (23) atomicFormula -> expression LTE . expression
    (24) atomicFormula -> expression LTE . term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    CONSTANT        shift and go to state 10
    IDENTIFIER      shift and go to state 46
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    expression                     shift and go to state 53
    term                           shift and go to state 54

state 27

    (27) atomicFormula -> expression GT . expression
    (28) atomicFormula -> expression GT . term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    CONSTANT        shift and go to state 10
    IDENTIFIER      shift and go to state 46
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    expression                     shift and go to state 55
    term                           shift and go to state 56

state 28

    (31) atomicFormula -> expression GTE . expression
    (32) atomicFormula -> expression GTE . term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    CONSTANT        shift and go to state 10
    IDENTIFIER      shift and go to state 46
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    expression                     shift and go to state 57
    term                           shift and go to state 58

state 29

    (35) atomicFormula -> expression NEQ . expression
    (36) atomicFormula -> expression NEQ . term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    CONSTANT        shift and go to state 10
    IDENTIFIER      shift and go to state 46
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    expression                     shift and go to state 59
    term                           shift and go to state 60

state 30

    (17) expression -> expression PLUS . term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    CONSTANT        shift and go to state 10
    IDENTIFIER      shift and go to state 46
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    term                           shift and go to state 61

state 31

    (15) atomicFormula -> term EQ . expression
    (16) atomicFormula -> term EQ . term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    CONSTANT        shift and go to state 10
    IDENTIFIER      shift and go to state 46
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    term                           shift and go to state 62
    expression                     shift and go to state 63

state 32

    (21) atomicFormula -> term LT . expression
    (22) atomicFormula -> term LT . term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    CONSTANT        shift and go to state 10
    IDENTIFIER      shift and go to state 46
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    term                           shift and go to state 64
    expression                     shift and go to state 65

state 33

    (25) atomicFormula -> term LTE . expression
    (26) atomicFormula -> term LTE . term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    CONSTANT        shift and go to state 10
    IDENTIFIER      shift and go to state 46
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    term                           shift and go to state 66
    expression                     shift and go to state 67

state 34

    (29) atomicFormula -> term GT . expression
    (30) atomicFormula -> term GT . term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    CONSTANT        shift and go to state 10
    IDENTIFIER      shift and go to state 46
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    term                           shift and go to state 68
    expression                     shift and go to state 69

state 35

    (33) atomicFormula -> term GTE . expression
    (34) atomicFormula -> term GTE . term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    CONSTANT        shift and go to state 10
    IDENTIFIER      shift and go to state 46
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    term                           shift and go to state 70
    expression                     shift and go to state 71

state 36

    (37) atomicFormula -> term NEQ . expression
    (38) atomicFormula -> term NEQ . term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    CONSTANT        shift and go to state 10
    IDENTIFIER      shift and go to state 46
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    term                           shift and go to state 72
    expression                     shift and go to state 73

state 37

    (18) expression -> term PLUS . term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    CONSTANT        shift and go to state 10
    IDENTIFIER      shift and go to state 46
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    term                           shift and go to state 74

state 38

    (3) formula -> formula IFF formula .
    (3) formula -> formula . IFF formula
    (4) formula -> formula . IMPLIES formula
    (5) formula -> formula . OR formula
    (6) formula -> formula . AND formula

    IFF             reduce using rule 3 (formula -> formula IFF formula .)
    $end            reduce using rule 3 (formula -> formula IFF formula .)
    RBRACKET        reduce using rule 3 (formula -> formula IFF formula .)
    IMPLIES         shift and go to state 15
    OR              shift and go to state 16
    AND             shift and go to state 17

  ! IMPLIES         [ reduce using rule 3 (formula -> formula IFF formula .) ]
  ! OR              [ reduce using rule 3 (formula -> formula IFF formula .) ]
  ! AND             [ reduce using rule 3 (formula -> formula IFF formula .) ]
  ! IFF             [ shift and go to state 14 ]


state 39

    (4) formula -> formula IMPLIES formula .
    (3) formula -> formula . IFF formula
    (4) formula -> formula . IMPLIES formula
    (5) formula -> formula . OR formula
    (6) formula -> formula . AND formula

    IFF             reduce using rule 4 (formula -> formula IMPLIES formula .)
    IMPLIES         reduce using rule 4 (formula -> formula IMPLIES formula .)
    $end            reduce using rule 4 (formula -> formula IMPLIES formula .)
    RBRACKET        reduce using rule 4 (formula -> formula IMPLIES formula .)
    OR              shift and go to state 16
    AND             shift and go to state 17

  ! OR              [ reduce using rule 4 (formula -> formula IMPLIES formula .) ]
  ! AND             [ reduce using rule 4 (formula -> formula IMPLIES formula .) ]
  ! IFF             [ shift and go to state 14 ]
  ! IMPLIES         [ shift and go to state 15 ]


state 40

    (5) formula -> formula OR formula .
    (3) formula -> formula . IFF formula
    (4) formula -> formula . IMPLIES formula
    (5) formula -> formula . OR formula
    (6) formula -> formula . AND formula

    IFF             reduce using rule 5 (formula -> formula OR formula .)
    IMPLIES         reduce using rule 5 (formula -> formula OR formula .)
    OR              reduce using rule 5 (formula -> formula OR formula .)
    $end            reduce using rule 5 (formula -> formula OR formula .)
    RBRACKET        reduce using rule 5 (formula -> formula OR formula .)
    AND             shift and go to state 17

  ! AND             [ reduce using rule 5 (formula -> formula OR formula .) ]
  ! IFF             [ shift and go to state 14 ]
  ! IMPLIES         [ shift and go to state 15 ]
  ! OR              [ shift and go to state 16 ]


state 41

    (6) formula -> formula AND formula .
    (3) formula -> formula . IFF formula
    (4) formula -> formula . IMPLIES formula
    (5) formula -> formula . OR formula
    (6) formula -> formula . AND formula

    IFF             reduce using rule 6 (formula -> formula AND formula .)
    IMPLIES         reduce using rule 6 (formula -> formula AND formula .)
    OR              reduce using rule 6 (formula -> formula AND formula .)
    AND             reduce using rule 6 (formula -> formula AND formula .)
    $end            reduce using rule 6 (formula -> formula AND formula .)
    RBRACKET        reduce using rule 6 (formula -> formula AND formula .)

  ! IFF             [ shift and go to state 14 ]
  ! IMPLIES         [ shift and go to state 15 ]
  ! OR              [ shift and go to state 16 ]
  ! AND             [ shift and go to state 17 ]


state 42

    (2) formula -> LBRACKET formula RBRACKET .

    IFF             reduce using rule 2 (formula -> LBRACKET formula RBRACKET .)
    IMPLIES         reduce using rule 2 (formula -> LBRACKET formula RBRACKET .)
    OR              reduce using rule 2 (formula -> LBRACKET formula RBRACKET .)
    AND             reduce using rule 2 (formula -> LBRACKET formula RBRACKET .)
    $end            reduce using rule 2 (formula -> LBRACKET formula RBRACKET .)
    RBRACKET        reduce using rule 2 (formula -> LBRACKET formula RBRACKET .)


state 43

    (10) formula -> FORALL quantifierList LBRACKET . formula RBRACKET
    (1) formula -> . atomicFormula
    (2) formula -> . LBRACKET formula RBRACKET
    (3) formula -> . formula IFF formula
    (4) formula -> . formula IMPLIES formula
    (5) formula -> . formula OR formula
    (6) formula -> . formula AND formula
    (7) formula -> . NOT formula
    (10) formula -> . FORALL quantifierList LBRACKET formula RBRACKET
    (11) formula -> . THEREEXISTS quantifierList LBRACKET formula RBRACKET
    (12) atomicFormula -> . IDENTIFIER LBRACKET termList RBRACKET
    (13) atomicFormula -> . expression EQ expression
    (14) atomicFormula -> . expression EQ term
    (15) atomicFormula -> . term EQ expression
    (16) atomicFormula -> . term EQ term
    (19) atomicFormula -> . expression LT expression
    (20) atomicFormula -> . expression LT term
    (21) atomicFormula -> . term LT expression
    (22) atomicFormula -> . term LT term
    (23) atomicFormula -> . expression LTE expression
    (24) atomicFormula -> . expression LTE term
    (25) atomicFormula -> . term LTE expression
    (26) atomicFormula -> . term LTE term
    (27) atomicFormula -> . expression GT expression
    (28) atomicFormula -> . expression GT term
    (29) atomicFormula -> . term GT expression
    (30) atomicFormula -> . term GT term
    (31) atomicFormula -> . expression GTE expression
    (32) atomicFormula -> . expression GTE term
    (33) atomicFormula -> . term GTE expression
    (34) atomicFormula -> . term GTE term
    (35) atomicFormula -> . expression NEQ expression
    (36) atomicFormula -> . expression NEQ term
    (37) atomicFormula -> . term NEQ expression
    (38) atomicFormula -> . term NEQ term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    LBRACKET        shift and go to state 3
    NOT             shift and go to state 4
    FORALL          shift and go to state 5
    THEREEXISTS     shift and go to state 6
    IDENTIFIER      shift and go to state 7
    CONSTANT        shift and go to state 10
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    formula                        shift and go to state 75
    atomicFormula                  shift and go to state 2
    expression                     shift and go to state 8
    term                           shift and go to state 9

state 44

    (8) quantifierList -> quantifierList COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 76


state 45

    (11) formula -> THEREEXISTS quantifierList LBRACKET . formula RBRACKET
    (1) formula -> . atomicFormula
    (2) formula -> . LBRACKET formula RBRACKET
    (3) formula -> . formula IFF formula
    (4) formula -> . formula IMPLIES formula
    (5) formula -> . formula OR formula
    (6) formula -> . formula AND formula
    (7) formula -> . NOT formula
    (10) formula -> . FORALL quantifierList LBRACKET formula RBRACKET
    (11) formula -> . THEREEXISTS quantifierList LBRACKET formula RBRACKET
    (12) atomicFormula -> . IDENTIFIER LBRACKET termList RBRACKET
    (13) atomicFormula -> . expression EQ expression
    (14) atomicFormula -> . expression EQ term
    (15) atomicFormula -> . term EQ expression
    (16) atomicFormula -> . term EQ term
    (19) atomicFormula -> . expression LT expression
    (20) atomicFormula -> . expression LT term
    (21) atomicFormula -> . term LT expression
    (22) atomicFormula -> . term LT term
    (23) atomicFormula -> . expression LTE expression
    (24) atomicFormula -> . expression LTE term
    (25) atomicFormula -> . term LTE expression
    (26) atomicFormula -> . term LTE term
    (27) atomicFormula -> . expression GT expression
    (28) atomicFormula -> . expression GT term
    (29) atomicFormula -> . term GT expression
    (30) atomicFormula -> . term GT term
    (31) atomicFormula -> . expression GTE expression
    (32) atomicFormula -> . expression GTE term
    (33) atomicFormula -> . term GTE expression
    (34) atomicFormula -> . term GTE term
    (35) atomicFormula -> . expression NEQ expression
    (36) atomicFormula -> . expression NEQ term
    (37) atomicFormula -> . term NEQ expression
    (38) atomicFormula -> . term NEQ term
    (17) expression -> . expression PLUS term
    (18) expression -> . term PLUS term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    LBRACKET        shift and go to state 3
    NOT             shift and go to state 4
    FORALL          shift and go to state 5
    THEREEXISTS     shift and go to state 6
    IDENTIFIER      shift and go to state 7
    CONSTANT        shift and go to state 10
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    formula                        shift and go to state 77
    atomicFormula                  shift and go to state 2
    expression                     shift and go to state 8
    term                           shift and go to state 9

state 46

    (42) term -> IDENTIFIER .

    RBRACKET        reduce using rule 42 (term -> IDENTIFIER .)
    COMMA           reduce using rule 42 (term -> IDENTIFIER .)
    PLUS            reduce using rule 42 (term -> IDENTIFIER .)
    IFF             reduce using rule 42 (term -> IDENTIFIER .)
    IMPLIES         reduce using rule 42 (term -> IDENTIFIER .)
    OR              reduce using rule 42 (term -> IDENTIFIER .)
    AND             reduce using rule 42 (term -> IDENTIFIER .)
    $end            reduce using rule 42 (term -> IDENTIFIER .)
    EQ              reduce using rule 42 (term -> IDENTIFIER .)
    LT              reduce using rule 42 (term -> IDENTIFIER .)
    LTE             reduce using rule 42 (term -> IDENTIFIER .)
    GT              reduce using rule 42 (term -> IDENTIFIER .)
    GTE             reduce using rule 42 (term -> IDENTIFIER .)
    NEQ             reduce using rule 42 (term -> IDENTIFIER .)


state 47

    (12) atomicFormula -> IDENTIFIER LBRACKET termList . RBRACKET
    (39) termList -> termList . COMMA term

    RBRACKET        shift and go to state 78
    COMMA           shift and go to state 79


state 48

    (40) termList -> term .

    RBRACKET        reduce using rule 40 (termList -> term .)
    COMMA           reduce using rule 40 (termList -> term .)


state 49

    (13) atomicFormula -> expression EQ expression .
    (17) expression -> expression . PLUS term

    IFF             reduce using rule 13 (atomicFormula -> expression EQ expression .)
    IMPLIES         reduce using rule 13 (atomicFormula -> expression EQ expression .)
    OR              reduce using rule 13 (atomicFormula -> expression EQ expression .)
    AND             reduce using rule 13 (atomicFormula -> expression EQ expression .)
    $end            reduce using rule 13 (atomicFormula -> expression EQ expression .)
    RBRACKET        reduce using rule 13 (atomicFormula -> expression EQ expression .)
    PLUS            shift and go to state 30


state 50

    (14) atomicFormula -> expression EQ term .
    (18) expression -> term . PLUS term

    IFF             reduce using rule 14 (atomicFormula -> expression EQ term .)
    IMPLIES         reduce using rule 14 (atomicFormula -> expression EQ term .)
    OR              reduce using rule 14 (atomicFormula -> expression EQ term .)
    AND             reduce using rule 14 (atomicFormula -> expression EQ term .)
    $end            reduce using rule 14 (atomicFormula -> expression EQ term .)
    RBRACKET        reduce using rule 14 (atomicFormula -> expression EQ term .)
    PLUS            shift and go to state 37


state 51

    (19) atomicFormula -> expression LT expression .
    (17) expression -> expression . PLUS term

    IFF             reduce using rule 19 (atomicFormula -> expression LT expression .)
    IMPLIES         reduce using rule 19 (atomicFormula -> expression LT expression .)
    OR              reduce using rule 19 (atomicFormula -> expression LT expression .)
    AND             reduce using rule 19 (atomicFormula -> expression LT expression .)
    $end            reduce using rule 19 (atomicFormula -> expression LT expression .)
    RBRACKET        reduce using rule 19 (atomicFormula -> expression LT expression .)
    PLUS            shift and go to state 30


state 52

    (20) atomicFormula -> expression LT term .
    (18) expression -> term . PLUS term

    IFF             reduce using rule 20 (atomicFormula -> expression LT term .)
    IMPLIES         reduce using rule 20 (atomicFormula -> expression LT term .)
    OR              reduce using rule 20 (atomicFormula -> expression LT term .)
    AND             reduce using rule 20 (atomicFormula -> expression LT term .)
    $end            reduce using rule 20 (atomicFormula -> expression LT term .)
    RBRACKET        reduce using rule 20 (atomicFormula -> expression LT term .)
    PLUS            shift and go to state 37


state 53

    (23) atomicFormula -> expression LTE expression .
    (17) expression -> expression . PLUS term

    IFF             reduce using rule 23 (atomicFormula -> expression LTE expression .)
    IMPLIES         reduce using rule 23 (atomicFormula -> expression LTE expression .)
    OR              reduce using rule 23 (atomicFormula -> expression LTE expression .)
    AND             reduce using rule 23 (atomicFormula -> expression LTE expression .)
    $end            reduce using rule 23 (atomicFormula -> expression LTE expression .)
    RBRACKET        reduce using rule 23 (atomicFormula -> expression LTE expression .)
    PLUS            shift and go to state 30


state 54

    (24) atomicFormula -> expression LTE term .
    (18) expression -> term . PLUS term

    IFF             reduce using rule 24 (atomicFormula -> expression LTE term .)
    IMPLIES         reduce using rule 24 (atomicFormula -> expression LTE term .)
    OR              reduce using rule 24 (atomicFormula -> expression LTE term .)
    AND             reduce using rule 24 (atomicFormula -> expression LTE term .)
    $end            reduce using rule 24 (atomicFormula -> expression LTE term .)
    RBRACKET        reduce using rule 24 (atomicFormula -> expression LTE term .)
    PLUS            shift and go to state 37


state 55

    (27) atomicFormula -> expression GT expression .
    (17) expression -> expression . PLUS term

    IFF             reduce using rule 27 (atomicFormula -> expression GT expression .)
    IMPLIES         reduce using rule 27 (atomicFormula -> expression GT expression .)
    OR              reduce using rule 27 (atomicFormula -> expression GT expression .)
    AND             reduce using rule 27 (atomicFormula -> expression GT expression .)
    $end            reduce using rule 27 (atomicFormula -> expression GT expression .)
    RBRACKET        reduce using rule 27 (atomicFormula -> expression GT expression .)
    PLUS            shift and go to state 30


state 56

    (28) atomicFormula -> expression GT term .
    (18) expression -> term . PLUS term

    IFF             reduce using rule 28 (atomicFormula -> expression GT term .)
    IMPLIES         reduce using rule 28 (atomicFormula -> expression GT term .)
    OR              reduce using rule 28 (atomicFormula -> expression GT term .)
    AND             reduce using rule 28 (atomicFormula -> expression GT term .)
    $end            reduce using rule 28 (atomicFormula -> expression GT term .)
    RBRACKET        reduce using rule 28 (atomicFormula -> expression GT term .)
    PLUS            shift and go to state 37


state 57

    (31) atomicFormula -> expression GTE expression .
    (17) expression -> expression . PLUS term

    IFF             reduce using rule 31 (atomicFormula -> expression GTE expression .)
    IMPLIES         reduce using rule 31 (atomicFormula -> expression GTE expression .)
    OR              reduce using rule 31 (atomicFormula -> expression GTE expression .)
    AND             reduce using rule 31 (atomicFormula -> expression GTE expression .)
    $end            reduce using rule 31 (atomicFormula -> expression GTE expression .)
    RBRACKET        reduce using rule 31 (atomicFormula -> expression GTE expression .)
    PLUS            shift and go to state 30


state 58

    (32) atomicFormula -> expression GTE term .
    (18) expression -> term . PLUS term

    IFF             reduce using rule 32 (atomicFormula -> expression GTE term .)
    IMPLIES         reduce using rule 32 (atomicFormula -> expression GTE term .)
    OR              reduce using rule 32 (atomicFormula -> expression GTE term .)
    AND             reduce using rule 32 (atomicFormula -> expression GTE term .)
    $end            reduce using rule 32 (atomicFormula -> expression GTE term .)
    RBRACKET        reduce using rule 32 (atomicFormula -> expression GTE term .)
    PLUS            shift and go to state 37


state 59

    (35) atomicFormula -> expression NEQ expression .
    (17) expression -> expression . PLUS term

    IFF             reduce using rule 35 (atomicFormula -> expression NEQ expression .)
    IMPLIES         reduce using rule 35 (atomicFormula -> expression NEQ expression .)
    OR              reduce using rule 35 (atomicFormula -> expression NEQ expression .)
    AND             reduce using rule 35 (atomicFormula -> expression NEQ expression .)
    $end            reduce using rule 35 (atomicFormula -> expression NEQ expression .)
    RBRACKET        reduce using rule 35 (atomicFormula -> expression NEQ expression .)
    PLUS            shift and go to state 30


state 60

    (36) atomicFormula -> expression NEQ term .
    (18) expression -> term . PLUS term

    IFF             reduce using rule 36 (atomicFormula -> expression NEQ term .)
    IMPLIES         reduce using rule 36 (atomicFormula -> expression NEQ term .)
    OR              reduce using rule 36 (atomicFormula -> expression NEQ term .)
    AND             reduce using rule 36 (atomicFormula -> expression NEQ term .)
    $end            reduce using rule 36 (atomicFormula -> expression NEQ term .)
    RBRACKET        reduce using rule 36 (atomicFormula -> expression NEQ term .)
    PLUS            shift and go to state 37


state 61

    (17) expression -> expression PLUS term .

    EQ              reduce using rule 17 (expression -> expression PLUS term .)
    LT              reduce using rule 17 (expression -> expression PLUS term .)
    LTE             reduce using rule 17 (expression -> expression PLUS term .)
    GT              reduce using rule 17 (expression -> expression PLUS term .)
    GTE             reduce using rule 17 (expression -> expression PLUS term .)
    NEQ             reduce using rule 17 (expression -> expression PLUS term .)
    PLUS            reduce using rule 17 (expression -> expression PLUS term .)
    IFF             reduce using rule 17 (expression -> expression PLUS term .)
    IMPLIES         reduce using rule 17 (expression -> expression PLUS term .)
    OR              reduce using rule 17 (expression -> expression PLUS term .)
    AND             reduce using rule 17 (expression -> expression PLUS term .)
    $end            reduce using rule 17 (expression -> expression PLUS term .)
    RBRACKET        reduce using rule 17 (expression -> expression PLUS term .)


state 62

    (16) atomicFormula -> term EQ term .
    (18) expression -> term . PLUS term

    IFF             reduce using rule 16 (atomicFormula -> term EQ term .)
    IMPLIES         reduce using rule 16 (atomicFormula -> term EQ term .)
    OR              reduce using rule 16 (atomicFormula -> term EQ term .)
    AND             reduce using rule 16 (atomicFormula -> term EQ term .)
    $end            reduce using rule 16 (atomicFormula -> term EQ term .)
    RBRACKET        reduce using rule 16 (atomicFormula -> term EQ term .)
    PLUS            shift and go to state 37


state 63

    (15) atomicFormula -> term EQ expression .
    (17) expression -> expression . PLUS term

    IFF             reduce using rule 15 (atomicFormula -> term EQ expression .)
    IMPLIES         reduce using rule 15 (atomicFormula -> term EQ expression .)
    OR              reduce using rule 15 (atomicFormula -> term EQ expression .)
    AND             reduce using rule 15 (atomicFormula -> term EQ expression .)
    $end            reduce using rule 15 (atomicFormula -> term EQ expression .)
    RBRACKET        reduce using rule 15 (atomicFormula -> term EQ expression .)
    PLUS            shift and go to state 30


state 64

    (22) atomicFormula -> term LT term .
    (18) expression -> term . PLUS term

    IFF             reduce using rule 22 (atomicFormula -> term LT term .)
    IMPLIES         reduce using rule 22 (atomicFormula -> term LT term .)
    OR              reduce using rule 22 (atomicFormula -> term LT term .)
    AND             reduce using rule 22 (atomicFormula -> term LT term .)
    $end            reduce using rule 22 (atomicFormula -> term LT term .)
    RBRACKET        reduce using rule 22 (atomicFormula -> term LT term .)
    PLUS            shift and go to state 37


state 65

    (21) atomicFormula -> term LT expression .
    (17) expression -> expression . PLUS term

    IFF             reduce using rule 21 (atomicFormula -> term LT expression .)
    IMPLIES         reduce using rule 21 (atomicFormula -> term LT expression .)
    OR              reduce using rule 21 (atomicFormula -> term LT expression .)
    AND             reduce using rule 21 (atomicFormula -> term LT expression .)
    $end            reduce using rule 21 (atomicFormula -> term LT expression .)
    RBRACKET        reduce using rule 21 (atomicFormula -> term LT expression .)
    PLUS            shift and go to state 30


state 66

    (26) atomicFormula -> term LTE term .
    (18) expression -> term . PLUS term

    IFF             reduce using rule 26 (atomicFormula -> term LTE term .)
    IMPLIES         reduce using rule 26 (atomicFormula -> term LTE term .)
    OR              reduce using rule 26 (atomicFormula -> term LTE term .)
    AND             reduce using rule 26 (atomicFormula -> term LTE term .)
    $end            reduce using rule 26 (atomicFormula -> term LTE term .)
    RBRACKET        reduce using rule 26 (atomicFormula -> term LTE term .)
    PLUS            shift and go to state 37


state 67

    (25) atomicFormula -> term LTE expression .
    (17) expression -> expression . PLUS term

    IFF             reduce using rule 25 (atomicFormula -> term LTE expression .)
    IMPLIES         reduce using rule 25 (atomicFormula -> term LTE expression .)
    OR              reduce using rule 25 (atomicFormula -> term LTE expression .)
    AND             reduce using rule 25 (atomicFormula -> term LTE expression .)
    $end            reduce using rule 25 (atomicFormula -> term LTE expression .)
    RBRACKET        reduce using rule 25 (atomicFormula -> term LTE expression .)
    PLUS            shift and go to state 30


state 68

    (30) atomicFormula -> term GT term .
    (18) expression -> term . PLUS term

    IFF             reduce using rule 30 (atomicFormula -> term GT term .)
    IMPLIES         reduce using rule 30 (atomicFormula -> term GT term .)
    OR              reduce using rule 30 (atomicFormula -> term GT term .)
    AND             reduce using rule 30 (atomicFormula -> term GT term .)
    $end            reduce using rule 30 (atomicFormula -> term GT term .)
    RBRACKET        reduce using rule 30 (atomicFormula -> term GT term .)
    PLUS            shift and go to state 37


state 69

    (29) atomicFormula -> term GT expression .
    (17) expression -> expression . PLUS term

    IFF             reduce using rule 29 (atomicFormula -> term GT expression .)
    IMPLIES         reduce using rule 29 (atomicFormula -> term GT expression .)
    OR              reduce using rule 29 (atomicFormula -> term GT expression .)
    AND             reduce using rule 29 (atomicFormula -> term GT expression .)
    $end            reduce using rule 29 (atomicFormula -> term GT expression .)
    RBRACKET        reduce using rule 29 (atomicFormula -> term GT expression .)
    PLUS            shift and go to state 30


state 70

    (34) atomicFormula -> term GTE term .
    (18) expression -> term . PLUS term

    IFF             reduce using rule 34 (atomicFormula -> term GTE term .)
    IMPLIES         reduce using rule 34 (atomicFormula -> term GTE term .)
    OR              reduce using rule 34 (atomicFormula -> term GTE term .)
    AND             reduce using rule 34 (atomicFormula -> term GTE term .)
    $end            reduce using rule 34 (atomicFormula -> term GTE term .)
    RBRACKET        reduce using rule 34 (atomicFormula -> term GTE term .)
    PLUS            shift and go to state 37


state 71

    (33) atomicFormula -> term GTE expression .
    (17) expression -> expression . PLUS term

    IFF             reduce using rule 33 (atomicFormula -> term GTE expression .)
    IMPLIES         reduce using rule 33 (atomicFormula -> term GTE expression .)
    OR              reduce using rule 33 (atomicFormula -> term GTE expression .)
    AND             reduce using rule 33 (atomicFormula -> term GTE expression .)
    $end            reduce using rule 33 (atomicFormula -> term GTE expression .)
    RBRACKET        reduce using rule 33 (atomicFormula -> term GTE expression .)
    PLUS            shift and go to state 30


state 72

    (38) atomicFormula -> term NEQ term .
    (18) expression -> term . PLUS term

    IFF             reduce using rule 38 (atomicFormula -> term NEQ term .)
    IMPLIES         reduce using rule 38 (atomicFormula -> term NEQ term .)
    OR              reduce using rule 38 (atomicFormula -> term NEQ term .)
    AND             reduce using rule 38 (atomicFormula -> term NEQ term .)
    $end            reduce using rule 38 (atomicFormula -> term NEQ term .)
    RBRACKET        reduce using rule 38 (atomicFormula -> term NEQ term .)
    PLUS            shift and go to state 37


state 73

    (37) atomicFormula -> term NEQ expression .
    (17) expression -> expression . PLUS term

    IFF             reduce using rule 37 (atomicFormula -> term NEQ expression .)
    IMPLIES         reduce using rule 37 (atomicFormula -> term NEQ expression .)
    OR              reduce using rule 37 (atomicFormula -> term NEQ expression .)
    AND             reduce using rule 37 (atomicFormula -> term NEQ expression .)
    $end            reduce using rule 37 (atomicFormula -> term NEQ expression .)
    RBRACKET        reduce using rule 37 (atomicFormula -> term NEQ expression .)
    PLUS            shift and go to state 30


state 74

    (18) expression -> term PLUS term .

    EQ              reduce using rule 18 (expression -> term PLUS term .)
    LT              reduce using rule 18 (expression -> term PLUS term .)
    LTE             reduce using rule 18 (expression -> term PLUS term .)
    GT              reduce using rule 18 (expression -> term PLUS term .)
    GTE             reduce using rule 18 (expression -> term PLUS term .)
    NEQ             reduce using rule 18 (expression -> term PLUS term .)
    PLUS            reduce using rule 18 (expression -> term PLUS term .)
    IFF             reduce using rule 18 (expression -> term PLUS term .)
    IMPLIES         reduce using rule 18 (expression -> term PLUS term .)
    OR              reduce using rule 18 (expression -> term PLUS term .)
    AND             reduce using rule 18 (expression -> term PLUS term .)
    $end            reduce using rule 18 (expression -> term PLUS term .)
    RBRACKET        reduce using rule 18 (expression -> term PLUS term .)


state 75

    (10) formula -> FORALL quantifierList LBRACKET formula . RBRACKET
    (3) formula -> formula . IFF formula
    (4) formula -> formula . IMPLIES formula
    (5) formula -> formula . OR formula
    (6) formula -> formula . AND formula

    RBRACKET        shift and go to state 80
    IFF             shift and go to state 14
    IMPLIES         shift and go to state 15
    OR              shift and go to state 16
    AND             shift and go to state 17


state 76

    (8) quantifierList -> quantifierList COMMA IDENTIFIER .

    LBRACKET        reduce using rule 8 (quantifierList -> quantifierList COMMA IDENTIFIER .)
    COMMA           reduce using rule 8 (quantifierList -> quantifierList COMMA IDENTIFIER .)


state 77

    (11) formula -> THEREEXISTS quantifierList LBRACKET formula . RBRACKET
    (3) formula -> formula . IFF formula
    (4) formula -> formula . IMPLIES formula
    (5) formula -> formula . OR formula
    (6) formula -> formula . AND formula

    RBRACKET        shift and go to state 81
    IFF             shift and go to state 14
    IMPLIES         shift and go to state 15
    OR              shift and go to state 16
    AND             shift and go to state 17


state 78

    (12) atomicFormula -> IDENTIFIER LBRACKET termList RBRACKET .

    IFF             reduce using rule 12 (atomicFormula -> IDENTIFIER LBRACKET termList RBRACKET .)
    IMPLIES         reduce using rule 12 (atomicFormula -> IDENTIFIER LBRACKET termList RBRACKET .)
    OR              reduce using rule 12 (atomicFormula -> IDENTIFIER LBRACKET termList RBRACKET .)
    AND             reduce using rule 12 (atomicFormula -> IDENTIFIER LBRACKET termList RBRACKET .)
    $end            reduce using rule 12 (atomicFormula -> IDENTIFIER LBRACKET termList RBRACKET .)
    RBRACKET        reduce using rule 12 (atomicFormula -> IDENTIFIER LBRACKET termList RBRACKET .)


state 79

    (39) termList -> termList COMMA . term
    (41) term -> . CONSTANT
    (42) term -> . IDENTIFIER
    (43) term -> . STRINGLIT
    (44) term -> . TRUE
    (45) term -> . FALSE

    CONSTANT        shift and go to state 10
    IDENTIFIER      shift and go to state 46
    STRINGLIT       shift and go to state 11
    TRUE            shift and go to state 12
    FALSE           shift and go to state 13

    term                           shift and go to state 82

state 80

    (10) formula -> FORALL quantifierList LBRACKET formula RBRACKET .

    IFF             reduce using rule 10 (formula -> FORALL quantifierList LBRACKET formula RBRACKET .)
    IMPLIES         reduce using rule 10 (formula -> FORALL quantifierList LBRACKET formula RBRACKET .)
    OR              reduce using rule 10 (formula -> FORALL quantifierList LBRACKET formula RBRACKET .)
    AND             reduce using rule 10 (formula -> FORALL quantifierList LBRACKET formula RBRACKET .)
    $end            reduce using rule 10 (formula -> FORALL quantifierList LBRACKET formula RBRACKET .)
    RBRACKET        reduce using rule 10 (formula -> FORALL quantifierList LBRACKET formula RBRACKET .)


state 81

    (11) formula -> THEREEXISTS quantifierList LBRACKET formula RBRACKET .

    IFF             reduce using rule 11 (formula -> THEREEXISTS quantifierList LBRACKET formula RBRACKET .)
    IMPLIES         reduce using rule 11 (formula -> THEREEXISTS quantifierList LBRACKET formula RBRACKET .)
    OR              reduce using rule 11 (formula -> THEREEXISTS quantifierList LBRACKET formula RBRACKET .)
    AND             reduce using rule 11 (formula -> THEREEXISTS quantifierList LBRACKET formula RBRACKET .)
    $end            reduce using rule 11 (formula -> THEREEXISTS quantifierList LBRACKET formula RBRACKET .)
    RBRACKET        reduce using rule 11 (formula -> THEREEXISTS quantifierList LBRACKET formula RBRACKET .)


state 82

    (39) termList -> termList COMMA term .

    RBRACKET        reduce using rule 39 (termList -> termList COMMA term .)
    COMMA           reduce using rule 39 (termList -> termList COMMA term .)

